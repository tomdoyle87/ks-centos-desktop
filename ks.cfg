%pre  
#!/bin/sh
OS=$(awk -F= '/^PRETTY_NAME/{print $2}' /etc/os-release)
if [[ "$OS" == *"Rocky Linux 8.8"* ]]; then
	echo 'url --mirrorlist="https://mirrors.rockylinux.org/mirrorlist?repo=rocky-BaseOS-8.8&arch=x86_64"' > /tmp/install-url.ks
	echo 'repo --name=AppStream --mirrorlist=https://mirrors.rockylinux.org/mirrorlist?repo=rocky-AppStream-8.8&arch=x86_64' >> /tmp/install-url.ks
	echo 'repo --name=epel --baseurl="http://download.fedoraproject.org/pub/epel/8/Everything/x86_64/"'  >> /tmp/install-url.ks

elif [[ "$OS" == *"Rocky Linux 9.2"* ]]; then
	echo 'url --mirrorlist="https://mirrors.rockylinux.org/mirrorlist?repo=rocky-BaseOS-9.2&arch=x86_64"' > /tmp/install-url.ks
	echo 'repo --name=AppStream --mirrorlist=https://mirrors.rockylinux.org/mirrorlist?repo=rocky-AppStream-9.2&arch=x86_64' >> /tmp/install-url.ks
	echo 'repo --name=epel --baseurl="http://download.fedoraproject.org/pub/epel/9/Everything/x86_64/"'  >> /tmp/install-url.ks
		
elif [[ "$OS" == *"CentOS Stream 8"* ]]; then
	echo 'url --mirrorlist="http://mirrorlist.centos.org/?release=8-stream&arch=x86_64&repo=BaseOS"' > /tmp/install-url.ks
	echo 'repo --name=AppStream --mirrorlist=http://mirrorlist.centos.org/?release=8-stream&arch=x86_64&repo=AppStream' >> /tmp/install-url.ks
	echo 'repo --name=epel --baseurl="http://download.fedoraproject.org/pub/epel/8/Everything/x86_64/"'  >> /tmp/install-url.ks		

elif [[ "$OS" == *"CentOS Stream 9"* ]]; then
	echo 'url --url="http://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os"' > /tmp/install-url.ks
	echo 'repo --name=AppStream --baseurl=http://mirror.stream.centos.org/9-stream/AppStream/x86_64/os' >> /tmp/install-url.ks
	echo 'repo --name=epel --baseurl="http://download.fedoraproject.org/pub/epel/9/Everything/x86_64/"'  >> /tmp/install-url.ks

elif [[ "$OS" == *"AlmaLinux 8.8"* ]]; then
	echo 'url --mirrorlist="https://mirrors.almalinux.org/mirrorlist/8.8/baseos"' > /tmp/install-url.ks
	echo 'repo --name=AppStream --mirrorlist=https://mirrors.almalinux.org/mirrorlist/8.8/appstream' >> /tmp/install-url.ks
	echo 'repo --name=epel --baseurl="http://download.fedoraproject.org/pub/epel/8/Everything/x86_64/"'  >> /tmp/install-url.ks

elif [[ "$OS" == *"AlmaLinux 9.2"* ]]; then
	echo 'url --mirrorlist="https://mirrors.almalinux.org/mirrorlist/9.2/baseos"' > /tmp/install-url.ks
	echo 'repo --name=AppStream --mirrorlist=https://mirrors.almalinux.org/mirrorlist/9.2/appstream' >> /tmp/install-url.ks
	echo 'repo --name=epel --baseurl="http://download.fedoraproject.org/pub/epel/9/Everything/x86_64/"'  >> /tmp/install-url.ks

else
    echo -n "unknown"
fi

#!/bin/sh
VAR1=$(dmidecode --string chassis-type)
case "$VAR1" in
        Notebook|Portable|Portable|'Hand Held'|'Sub Notebook'|'Lunch Box')
		echo "%packages" > /tmp/packages.ks
			echo "@^workstation-product-environment" >> /tmp/packages.ks
				echo "@container-management" >> /tmp/packages.ks
					echo "@gnome-apps" >> /tmp/packages.ks
						echo "@internet-applications" >> /tmp/packages.ks
							echo "kexec-tools" >> /tmp/packages.ks
								echo "libreoffice-writer" >> /tmp/packages.ks
									echo "libreoffice-impress"  >> /tmp/packages.ks
										echo "libreoffice-calc" >> /tmp/packages.ks
											echo "tlp" >> /tmp/packages.ks
												echo "-cockpit" >> /tmp/packages.ks
	;;
	*)echo "%packages" > /tmp/packages.ks
			echo "@^workstation-product-environment" >> /tmp/packages.ks
				echo "@container-management" >> /tmp/packages.ks
					echo "@gnome-apps" >> /tmp/packages.ks
						echo "@internet-applications" >> /tmp/packages.ks
							echo "kexec-tools" >> /tmp/packages.ks
								echo "libreoffice-writer" >> /tmp/packages.ks
									echo "libreoffice-impress"  >> /tmp/packages.ks
										echo "libreoffice-calc" >> /tmp/packages.ks
											echo "-cockpit" >> /tmp/packages.ks
	;;
esac
echo "%end" >>/tmp/packages.ks
%end
firstboot --enable
# Use network installation
%include '/tmp/install-url.ks'
#Root account disabled
rootpw --lock
%include '/tmp/packages.ks'
# Autopartiton
autopart
# Partition clearing information
clearpart --none --initlabel
%post --nochroot
#!/bin/sh
# Desktop sessions given more human readable names
cd /mnt/sysimage/usr/share/xsessions/
rm -f com.redhat.Kiosk.desktop gnome-custom-session.desktop xinit-compat.desktop
sed -i '12s/.*/Name=Gnome Classic on Xorg/' gnome-classic.desktop
sed -i '12s/.*/Name=Gnome on Xorg/' gnome.desktop
sed -i '12s/.*/Name=Gnome on Xorg/' gnome-xorg.desktop
cd /mnt/sysimage/usr/share/wayland-sessions
sed -i '12s/.*/Name=Gnome Classic/' gnome-classic-wayland.desktop
sed -i '12s/.*/Name=Gnome/' gnome.desktop
# Disable power-profiles-daemon and enable TLP if installed 
systemctl disable power-profiles-daemon.service
cd /mnt/sysimage/etc/systemd/system
rm -rf power-profiles-daemon.service
ln -sf /dev/null power-profiles-daemon.service
cd /mnt/sysimage/etc/systemd/system/multi-user.target.wants
ln -s /usr/lib/systemd/system/tlp.service tlp.service
# Setup Firewall
cp /run/install/repo/firewalld-workstation.conf /mnt/sysimage/etc/firewalld/
cp /run/install/repo/Saincheaptha.xml /mnt/sysimage/etc/firewalld/zones/
cd /mnt/sysimage/etc/firewalld
rm -f firewalld.conf
ln -sf /etc/firewalld/firewalld-workstation.conf firewalld.conf
#Enable EPEL with firstboot.service
cp /run/install/repo/firstboot.sh /mnt/sysimage/usr/local/bin/
chmod u+x /mnt/sysimage/usr/local/bin/firstboot.sh
cp /run/install/repo/firstboot.service /mnt/sysimage/etc/systemd/system/
cd /mnt/sysimage/etc/systemd/system/multi-user.target.wants/
ln -s /etc/systemd/system/firstboot.service firstboot.service
%end
